generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  registeredAt DateTime      @default(now())
  email        String        @unique
  fullName     String
  password     String
  region       String?
  city         String?
  phone        String?
  club         Club?         @relation(fields: [clubId], references: [id])
  clubId       Int?
  role         Role          @default(USER)
  reservations Reservation[]
}

model Reservation {
  id          Int                        @id @default(autoincrement())
  createdAt   DateTime                   @default(now())
  updatedAt   DateTime                   @updatedAt
  startDate   DateTime
  endDate     DateTime?
  isConfirmed Boolean                    @default(false)
  user        User                       @relation(fields: [userId], references: [id])
  userId      Int
  field       Field                      @relation(fields: [fieldId], references: [id])
  fieldId     Int
  equipments  EquipmentsOnReservations[]
}

model Equipment {
  id           Int                        @id @default(autoincrement())
  createdAt    DateTime                   @default(now())
  updatedAt    DateTime                   @updatedAt
  name         String
  description  String
  imagePath    String?
  price        Int                        @default(0)
  quantity     Int                        @default(0)
  category     Category                   @relation(fields: [categoryId], references: [id])
  categoryId   Int
  reservations EquipmentsOnReservations[]
}

model EquipmentsOnReservations {
  assignedAt    DateTime    @default(now())
  equipment     Equipment   @relation(fields: [equipmentId], references: [id])
  equipmentId   Int
  reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int

  @@id([equipmentId, reservationId])
}

model Field {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  name         String
  description  String
  imagePath    String?
  price        Int           @default(0)
  category     Category      @relation(fields: [categoryId], references: [id])
  categoryId   Int
  reservations Reservation[]
}

model Category {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  name       String
  logoPath   String?
  fields     Field[]
  equipments Equipment[]
}

model Club {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  logoPath  String?
  users     User[]
}

enum Role {
  USER
  CUSTOMER
  ADMIN
}
